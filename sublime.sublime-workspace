{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"end",
				"endPosition"
			],
			[
				"PO",
				"positionE"
			],
			[
				"add",
				"addTilesMap"
			],
			[
				"f",
				"false"
			],
			[
				"Y",
				"yCoord"
			],
			[
				"X",
				"xCoord"
			],
			[
				"Ma",
				"MapRows"
			],
			[
				"x",
				"xPos"
			],
			[
				"a",
				"AdditionalRooms"
			],
			[
				"Map",
				"MapRows"
			],
			[
				"L",
				"Length"
			],
			[
				"D",
				"Debug"
			],
			[
				"G",
				"GameObject"
			],
			[
				"r",
				"roomWidth"
			],
			[
				"c",
				"currentRoom"
			],
			[
				"Ra",
				"Range"
			],
			[
				"Rom",
				"roomWidth"
			],
			[
				"co",
				"corridorLength"
			],
			[
				"room",
				"roomHeight"
			],
			[
				"l",
				"Log"
			],
			[
				"y",
				"yPos"
			],
			[
				"v",
				"Vector3"
			],
			[
				"Mesh",
				"MeshFilter"
			],
			[
				"Mes",
				"MeshFilter"
			],
			[
				"St",
				"StartingRoom"
			],
			[
				"S",
				"StartingRoom"
			],
			[
				"new",
				"newRoom"
			],
			[
				"R",
				"RotateRandomly"
			],
			[
				"B",
				"BoxCollider2d"
			],
			[
				"b",
				"BoxCollider2d"
			],
			[
				"rota",
				"rotation"
			]
		]
	},
	"buffers":
	[
		{
			"file": "Assets/Scripts/Room.cs",
			"settings":
			{
				"buffer_size": 1888,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class MotionController : MonoBehaviour\n{\n\tpublic float speed;\n    public float cellSize;\n    bool isMoving = false;\n    Vector3 direction;\n    Vector3 destPos;\n    public GameObject heroBody;\n  \tpublic Sprite[] sprites = new Sprite[4];\n\n    void Update()\n    {\n        if (isMoving == true)\n        {\n            float step = speed * Time.deltaTime;\n            transform.position = Vector3.MoveTowards(transform.position, destPos, step);\n            if (transform.position == destPos) isMoving = false;\n        }\n        else\n        {\n            if (Input.GetKeyDown(KeyCode.W))\n            {\n                direction = Vector3.up;\n                destPos = transform.position + direction * cellSize;\n                heroBody.GetComponent<SpriteRenderer>().sprite = sprites[2];\n                isMoving = true;\n            }\n            else if (Input.GetKeyDown(KeyCode.A))\n            {\n                direction = Vector3.left;\n                destPos = transform.position + direction * cellSize;\n                heroBody.GetComponent<SpriteRenderer>().sprite = sprites[1];\n                isMoving = true;\n            }\n            else if (Input.GetKeyDown(KeyCode.S))\n            {\n                direction = Vector3.down;\n                destPos = transform.position + direction * cellSize;\n                heroBody.GetComponent<SpriteRenderer>().sprite = sprites[0];\n                isMoving = true;\n            }\n            else if (Input.GetKeyDown(KeyCode.D))\n            {\n                direction = Vector3.right;\n                destPos = transform.position + direction * cellSize;\n                heroBody.GetComponent<SpriteRenderer>().sprite = sprites[3];\n                isMoving = true;\n            }\n        }\n    }\n}",
			"file": "Assets/Scripts/MotionController.cs",
			"file_size": 1885,
			"file_write_time": 132303695098917583,
			"settings":
			{
				"buffer_size": 1831,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Assets/Scripts/RoomGenerator.cs",
			"settings":
			{
				"buffer_size": 6342,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "Assets/Scripts/Enemy.cs",
			"settings":
			{
				"buffer_size": 197,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic enum Direction \n{\n North, East, South, West,\n}\n\npublic class Corridor \n{\n   \tpublic int startXPos; \n \tpublic int startYPos; \n \tpublic int corridorLength; \n \tpublic Direction direction;\n\n \tpublic int EndPositionX \n \t{\n \t\tget\n \t\t{\n \t\t\tif (direction == Direction.North || direction == Direction.South)\n \t\t\t\treturn startXPos;\n \t\t\tif (direction == Direction.East)\n \t\t\t\treturn startXPos + corridorLength - 1;\n \t\t\treturn startXPos - corridorLength + 1;\n \t\t}\n \t}\n \tpublic int EndPositionY \n \t{\n \t\tget\n \t\t{\n \t\t\tif (direction == Direction.East || direction == Direction.West)\n \t\t\t\treturn startYPos;\n \t\t\tif (direction == Direction.North)\n \t\t\t\treturn startYPos + corridorLength - 1;\n \t\t\treturn startYPos - corridorLength + 1;\n \t\t}\n \t}\n \tpublic void CreateCorridor(Room room, int length, int roomWidth, int roomHeight, int columns, int rows, bool firstCorridor) \n \t{\n \t\tdirection = (Direction)Random.Range(0, 4); \n \t\tDirection oppositeDirection = (Direction)(((int)room.enteringCorridor + 2) % 4);\n\t\t\n\t\tif (!firstCorridor && direction == oppositeDirection)\n \t\t{ \n \t\t\tint directionInt = (int)direction;\n \t\t\tdirectionInt++;\n \t\t\tdirectionInt = directionInt % 4;\n \t\t\tdirection = (Direction)directionInt;\n \t\t}\n\n \t\tcorridorLength = Random.Range(6,10);\n \t\tint maxLength = 10;\n \t\tswitch (direction) \n \t\t{\n \t\t\tcase Direction.North:\n \t\t\t\tstartXPos = Random.Range(room.xPos, room.xPos + room.roomWidth - 1);\n \t\t\t\tstartYPos = room.yPos + room.roomHeight;\n \t\t\t\tmaxLength = rows - startYPos - 6;\n \t\t\t\tbreak;\n \t\t\tcase Direction.East:\n \t\t\t\tstartXPos = room.xPos + room.roomWidth;\n \t\t\t\tstartYPos = Random.Range(room.yPos, room.yPos + room.roomHeight - 1);\n \t\t\t\tmaxLength = columns - startXPos - 6;\n \t\t\t\tbreak;\n \t\t\tcase Direction.South:\n \t\t\t\tstartXPos = Random.Range(room.xPos, room.xPos + room.roomWidth);\n \t\t\t\tstartYPos = room.yPos;\n \t\t\t\tmaxLength = startYPos - 6;\n \t\t\t\tbreak;\n \t\t\tcase Direction.West:\n \t\t\t\tstartXPos = room.xPos;\n \t\t\t\tstartYPos = Random.Range(room.yPos, room.yPos + room.roomHeight);\n \t\t\t\tmaxLength = startXPos - 6;\n \t\t\t\tbreak;\n \t\t}\n \t\tcorridorLength = Mathf.Clamp(corridorLength, 1, maxLength); \n \t} \n}\n",
			"file": "Assets/Scripts/Corridor.cs",
			"file_size": 2261,
			"file_write_time": 132293257463193466,
			"settings":
			{
				"buffer_size": 2179,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"packa",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 157.0,
		"history":
		[
			"504b 0304 1400 0000 0800 6150 0449 93f8",
			"Install Package Control"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/semas/Desktop/My Game",
		"/C/Users/semas/Desktop/My Game/Assets",
		"/C/Users/semas/Desktop/My Game/Assets/Scripts"
	],
	"file_history":
	[
		"/C/Users/semas/Desktop/My Game/Assets/Scripts/playerController.cs",
		"/C/Users/semas/Desktop/My Game/Assets/Scripts/userController.cs",
		"/C/Users/semas/Desktop/My",
		"/C/Users/semas/Desktop/My Game/Game/Assets/Scripts/Room.cs",
		"/C/Users/semas/Desktop/My Game/Assets/Scripts/Mesh_F.cs",
		"/C/Users/semas/Desktop/My Game/Assets/Scripts/Mesh.cs",
		"/C/Users/semas/Desktop/My Game/Game/Assets/Scripts/Mesh.cs",
		"/C/Users/semas/Desktop/My Game/Assets/Scripts/banner_1.cs",
		"/C/Users/semas/Desktop/My Game/Game/Assets/Scripts/playerController.cs",
		"/C/Users/semas/Desktop/My Game/Game/Assets/Scripts/RoomGenerator.cs",
		"/C/Users/semas/Desktop/My Game/Assets/Scripts/RoomGenerator.cs",
		"/C/Users/semas/Desktop/My Game/Assets/Scripts/Room.cs",
		"/C/Users/semas/Desktop/My Game/Assets/Scripts/RoomPlacer.cs",
		"/C/Users/semas/Desktop/My Game/Game/Assets/Scripts/RoomPlacer.cs",
		"/C/Users/semas/Desktop/My Game/Assets/Scripts/Hallway.cs",
		"/C/Users/semas/Desktop/ProceduralGeneration-master/Assets/Room.cs",
		"/C/Users/semas/Desktop/My Game/Assets/Scripts/Generator.cs",
		"/C/Users/semas/Desktop/My Game/Game/Assets/Scripts/Generator.cs",
		"/C/Users/semas/Desktop/My Game/Assets/Scripts/MapGeneration.cs",
		"/C/Users/semas/Desktop/My Game/Assets/Scripts/playerController.cs.meta",
		"/C/Users/semas/Desktop/My Game/Game/Assets/Scripts/MapGeneration.cs",
		"/C/Users/semas/Downloads/Package Control.sublime-package"
	],
	"find":
	{
		"height": 28.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"getcompo",
			"containersTiles",
			"2",
			"WALL",
			";\n",
			"wall",
			"floortile",
			"wall",
			"randomindex",
			"randomposition",
			"colums",
			"FLOORTILES",
			");\n",
			"DoorL",
			"            \n"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Assets/Scripts/Room.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1888,
						"regions":
						{
						},
						"selection":
						[
							[
								183,
								183
							]
						],
						"settings":
						{
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Assets/Scripts/MotionController.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1831,
						"regions":
						{
						},
						"selection":
						[
							[
								347,
								347
							]
						],
						"settings":
						{
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "Assets/Scripts/RoomGenerator.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6342,
						"regions":
						{
						},
						"selection":
						[
							[
								834,
								834
							]
						],
						"settings":
						{
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 456.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "Assets/Scripts/Enemy.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 197,
						"regions":
						{
						},
						"selection":
						[
							[
								25,
								25
							]
						],
						"settings":
						{
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "Assets/Scripts/Corridor.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2179,
						"regions":
						{
						},
						"selection":
						[
							[
								25,
								25
							]
						],
						"settings":
						{
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 28.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"output.variable_get":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "sublime.sublime-project",
	"replace":
	{
		"height": 52.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 244.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
